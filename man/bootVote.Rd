% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reprodEdge.R
\name{bootVote}
\alias{bootVote}
\title{Model aggregation through Boot.Vote}
\usage{
bootVote(bfits, givenX = FALSE, thresh = 0.5)
}
\arguments{
\item{bfits}{List of fitted spacemap models returned from \code{\link{bootEnsemble}}.}

\item{givenX}{Logical. Defaults to FALSE. Should be set to TRUE when 
\code{attr(bfits, "method) == "space} and \code{space.joint} was used
to infer (x--x, x--y, y--y) edges  but only reported (x--y, y--y) edges.}

\item{thresh}{Positive numeric threshold for the minimum proportion of bootstrap 
replicate model fits with a particular edge such that the edge is included in the Boot.Vote model.}
}
\value{
List containing two lists. 
First list is \code{bv}, which encodes the edges in two logical adjacency matrices.

\enumerate{
  \item \code{yy} Logical matrix where TRUE for the (q,l) off-diagonals element indicate an edge 
  between the qth and lth response variables. 
  \item \code{xy}  Logical matrix where TRUE for the (p,q) element indicate an edge 
  between the pth predictor and qth response variable. 
}

 Second list is \code{bc}, which stores several additional statistics on the ensemble network fits. 
\enumerate{ 
   \item \code{yy} Integer matrix containing the y--y edge selection frequency out of B replicates.
   \item \code{xy}  Integer matrix containing the x--y edge selection frequency out of B replicates.
   \item \code{dfyy} Integer vector containing the total number of y--y edges for each fit.
   \item \code{dfxy} Integer vector containing the total number of x--y edges for each fit.
}
}
\description{
Aggregate boostrap replicates of spacemap into a final Boot.Vote model.
}
\examples{
#Load simulation
data(sim1)
#Boostrap Ensemble (B = 10) for illustration only
tune <- data.frame(lam1 = 70, lam2 = 28.8, lam3 = 14)
out <- bootEnsemble(Y = sim1$Y, X = sim1$X, tune = tune, B = 10, iter = 3,
                    cdmax = 1e7, tol = 1e-6, refitRidge = 0)
bv <- bootVote(fits = out[[1]], P = ncol(sim1$X), Q = ncol(sim1$Y))
}
